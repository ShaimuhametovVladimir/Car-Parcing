using System;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI;

public class CarController : MonoBehaviour
{
   
   private Rigidbody _rb;
   public float speed = 5f, finalSpeed = 15f, rotateSpeed = 50f;
   private bool IsClicked;

   private float curPointX, curPointY;
      
   [NonSerialized] public Vector3 FinalPosition;

   public enum Axis
   {
      Vertical, Horizontal
   }

   public Axis CarAxis;
   private enum Direction
   {
      Right, Left, Top, Botton, None
   }

   private Direction CarDirectionX = Direction.None;
   private Direction CarDirectionY = Direction.None;
   
   public Text CountMoves, CountMoney;
   public GameObject StartGameBth;

   private static int CountCars = 0;

   private AudioSource _audio;
   public AudioClip AudioStart, AudioCrash;
   public ParticleSystem CrashEffect;
   
   void Awake()
   {
      CountCars++;
      _rb = GetComponent<Rigidbody>();
      _audio = GetComponent<AudioSource>();
   }

   void OnMouseDown()
   {
      if(!StartGame.IsGameStarted) return;
      
      curPointX = Input.mousePosition.x;
      curPointY = Input.mousePosition.y;
   }

   void OnMouseUp()
   {
      if(!StartGame.IsGameStarted) return;
      
      if (Input.mousePosition.x - curPointX > 0)
         CarDirectionX = Direction.Right;      
      else
         CarDirectionX = Direction.Left;
      
      if (Input.mousePosition.y - curPointY > 0)
         CarDirectionY = Direction.Top;
      else
         CarDirectionY = Direction.Botton;
      
      IsClicked = true;

      CountMoves.text = Convert.ToString(Convert.ToInt32(CountMoves.text) - 1);

      _audio.Stop();
      _audio.clip = AudioStart;
      _audio.Play();
   }

   void Update()
   {
      if(CountMoves.text == "0" && CountCars > 0 && !IsClicked)
         StartGameBth.GetComponent<StartGame>().LoseGame();
      
      if (FinalPosition.x != 0)
      {
         
         transform.position = Vector3.MoveTowards(transform.position, FinalPosition, finalSpeed * Time.deltaTime);

         Vector3 lookAtPos = FinalPosition - transform.position;
         lookAtPos.y = 0;
         transform.rotation = Quaternion.RotateTowards(transform.rotation, Quaternion.LookRotation(lookAtPos), Time.deltaTime * rotateSpeed);
      }

      if (transform.position == FinalPosition)
      {
         PlayerPrefs.SetInt("CarCoins", PlayerPrefs.GetInt("CarCoins") + 1);
         CountMoney.text = Convert.ToString(Convert.ToInt32(CountMoney.text) + 1);
         CountCars--;

         if(CountCars <= 0) StartGameBth.GetComponent<StartGame>().WinGame();
         
         
         Destroy(gameObject);
      }
   }

   void FixedUpdate()
   {
      if (IsClicked && FinalPosition.x == 0)
      {
         Vector3 whichWay = CarAxis == Axis.Horizontal ? Vector3.forward : Vector3.left;
         
         speed = Math.Abs(speed);
         if (CarDirectionX == Direction.Left && CarAxis == Axis.Horizontal)
            speed *= -1;
         else if (CarDirectionY == Direction.Botton && CarAxis == Axis.Vertical)
            speed *= -1;
         
         _rb.MovePosition(_rb.position + whichWay * speed * Time.fixedDeltaTime);
      }
     }
   
   void OnTriggerStay(Collider other)
   {
      if(other.CompareTag("Car") || other.CompareTag("Barrier"))
      {
         
         Destroy(
               Instantiate(CrashEffect, other.ClosestPoint(transform.position), Quaternion.Euler(new Vector3(270f, 0, 0))),
            2f);
         
         if (_audio.clip != AudioCrash && !_audio.isPlaying)
         {
            _audio.Stop();
            _audio.clip = AudioCrash;
            _audio.Play();
         }

         if(CarAxis == Axis.Horizontal && IsClicked)
         {
            float adding = CarDirectionX == Direction.Left ? 0.5f : -0.5f;
            transform.position = new Vector3(transform.position.x, 0, transform.position.z + adding);
         }
         
         if(CarAxis == Axis.Vertical && IsClicked)
         {
            float adding = CarDirectionY == Direction.Top ? 0.5f : -0.5f;
            transform.position = new Vector3(transform.position.x + adding, 0, transform.position.z);
         }

         IsClicked = false;
      }
   }

}
